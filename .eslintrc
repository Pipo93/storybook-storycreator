{
    "parser": "@typescript-eslint/parser",
    "extends": [
        "plugin:react/recommended", // Uses the recommended rules from @eslint-plugin-react
        "plugin:@typescript-eslint/recommended", // Uses the recommended rules from @typescript-eslint/eslint-plugin
        "prettier/@typescript-eslint",
        "plugin:prettier/recommended",
        "prettier/react"
    ],
    "plugins": [
        "react-hooks",
        "import"
    ],
    "parserOptions": {
        "ecmaVersion": 2018, // Allows for the parsing of modern ECMAScript features
        "sourceType": "module", // Allows for the use of imports
        "ecmaFeatures": {
            "jsx": true // Allows for the parsing of JSX
        }
    },
    "rules": {
        "no-console": "error",
        "react/prop-types": "off",
        "@typescript-eslint/no-namespace": "warn",
        "@typescript-eslint/prefer-interface": "off",
        "react/prefer-stateless-function": "warn",
        "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
        "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies
        "no-restricted-imports": ["error", "lodash/get"],
        "jsx-quotes": ["error", "prefer-double"],
        "prefer-template": "error",
        "react/jsx-curly-brace-presence": ["error", { "props": "never", "children": "never" }],
        "import/imports-first": "error",
        "import/order": "error",
        "object-shorthand": ["error", "always"],
        "no-use-before-define": "error",
        "no-nested-ternary": "warn",
        "no-else-return": ["error", {"allowElseIf": true}],
        "@typescript-eslint/no-unused-vars": ["error", { "varsIgnorePattern": "_" }]
        // Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs
        // e.g. "@typescript-eslint/explicit-function-return-type": "off",
    },
    "settings": {
        "react": {
            "version": "detect" // Tells eslint-plugin-react to automatically detect the version of React to use
        }
    }
}
